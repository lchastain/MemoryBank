NoteGroupKeepers
---------------------

Aug 2020 - Some problems with linkages traced back to the usage of 'keepers', which resulted in a knee-jerk
  suggestion that maybe they should not be used.  But keepers have been in place and working, ever since they
  were a good idea back in Feb of 2014, whereas linkages are a new addition.


PRO keeper:
    Construct each NoteGroupPanel only once, regardless of how many times it is viewed in an app session.
    Changes are not automatically saved, which allows a later UNDO via file reload.
    Fast change of view away from the current NoteGroupPanel - no need to save first.
    Fast selection/view of a previously viewed NoteGroupPanel - just get it from the keeper, and show it.

CON keeper:
    Not all NoteGroups have keepers - 'CalendarNoteGroupPanel' groups do not.  Inconsistent handling, then.
        3 of these, atm.  Make keepers for them?  (not needed nearly as much as the other group types).
        This could go up to 4, if we go ahead with 'WeekNoteGroup'.
    Construction makes either an editable, or non-editable group.  What if it was made one way but you need the other?
        make a NoteGroupPanel setEditable(boolean) ?
    Changes to the Group/Panel in a keeper are not seen in the persisted data.  This allows for those changes to be
        lost, if not accessed in the correct logical order.  This is converse of the PRO point about ability to 'undo',
        and was the basis of the initial problem.

The CONS all have imaginable and fairly easy fixes - the PROs do not have great or easy alternatives.

Update 24 Nov 2020 - Answers to CONs:
    Problems with the usage of keepers by linkages - were all resolved.
    CalendarNoteGroupPanels DO have keepers, of a sort - one of each type is held by the AppTreePanel.  The method
        'getPanelFromKeeper' supports CNGs and will work as long as the panel in question holds the right date.
    There IS now a method to set the editability of a panel.

The decision was made to keep the keepers methodology.

